@page "/Index"
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<PageTitle>Veh&iacute;culos</PageTitle>
<div class="container">
    <div class="card shadow-lg">
        <div class="card-header">
            <h3><strong>Veh&iacute;culos</strong></h3>
            <div class="row">
                <div class="col-2">
                    <a href="/Create" class="btn btn-success bi bi-file-earmark-diff-fill"> Crear</a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <label>Filtrar por:</label>
                <div class="col-3">
                    <InputSelect class="form-select" @bind-Value="OpcionFiltro">
                        <option disabled selected value="0">Seleccionar</option>
                        <option value="1">Veh&iacute;culo Id</option>
                        <option value="2">Fecha</option>
                        <option value="3">Descripci&oacute;n</option>
                    </InputSelect>
                </div>
                <div class="col-auto">
                    @switch (OpcionFiltro)
                    {
                        case 1:
                            <div class="input-group row">
                                <div class="col-3">
                                    <InputNumber class="form-control" @bind-Value="vehiculo.VehiculoId"></InputNumber>
                                </div>
                                <div class="col-3">
                                    <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Filtrar">Buscar</button>
                                </div>
                                <div class="col-5">
                                    <button type="button" class="btn btn-outline-secondary bi bi-arrow-clockwise" @onclick="ReiniciarFiltro">Reiniciar</button>
                                </div>
                            </div>
                            break;
                        case 2:
                            <div class="input-group row">
                                <div class="col-4">
                                    <InputDate class="form-control" @bind-Value="fechaInicio"></InputDate>
                                </div>
                                <div class="col-4">
                                    <InputDate class="form-control" @bind-Value="fechaFinal"></InputDate>
                                </div>
                                <div class="col-2">
                                    <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Filtrar">Buscar</button>
                                </div>
                                <div class="col-1">
                                    <button type="button" class="btn btn-outline-secondary bi bi-arrow-clockwise" @onclick="ReiniciarFiltro">Reiniciar</button>
                                </div>
                            </div>
                            break;
                        case 3:
                            <div class="input-group row">
                                <div class="col-6">
                                    <InputTextArea class="form-control" @bind-Value="vehiculo.Descripcion"></InputTextArea>
                                </div>
                                <div class="col-3">
                                    <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Filtrar">Buscar</button>
                                </div>
                                <div class="col-3">
                                    <button type="button" class="btn btn-outline-secondary bi bi-arrow-clockwise" @onclick="ReiniciarFiltro">Reiniciar</button>
                                </div>
                            </div>
                            break;
                    }
                </div>
                @if (listaVehiculos.Count() == 0)
                {
                    <div class="card">
                        <div class="card-body">
                            <h3 class="card-title">No hay veh&iacute;culos para mostrar.</h3>
                        </div>
                    </div>
                }
                else
                {
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Veh&iacute;culo Id</th>
                                <th>Fecha</th>
                                <th>Descripci&oacute;n</th>
                                <th>Costo</th>
                                <th>Gastos</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var vehiculo in listaVehiculos)
                            {
                                <tr>
                                    <td>@vehiculo.VehiculoId</td>
                                    <td>@vehiculo.Fecha.ToShortDateString()</td>
                                    <td>@vehiculo.Descripcion</td>
                                    <td>@vehiculo.Costo</td>
                                    <td>@vehiculo.Gastos</td>
                                    <td><button type="button" class="btn btn-info" @onclick="(e) => IrDetalle(vehiculo.VehiculoId)"><i class="bi bi-eye"></i> Detalles</button></td>
                                    <td><button type="button" class="btn btn-warning" @onclick="(e) => IrEditar(vehiculo.VehiculoId)"><i class="bi bi-pencil-square"></i> Editar</button></td>
                                    <td><button type="button" class="btn btn-danger" @onclick="(e) => IrEliminar(vehiculo.VehiculoId)"><i class="bi bi-trash3-fill"></i> Eliminar</button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col">
                        <p class="float-start"><strong>Total de Veh&iacute;culos:</strong> @listaVehiculos.Count</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Vehiculos vehiculo { get; set; } = new Vehiculos();
    public List<Vehiculos> listaVehiculos = new List<Vehiculos>();
    private int OpcionFiltro { get; set; } = 0;
    private DateTime fechaInicio { get; set; }
    private DateTime fechaFinal { get; set; }

    protected override async Task OnInitializedAsync()
    {
        listaVehiculos = (await httpClient.GetFromJsonAsync<List<Vehiculos>>("api/Vehiculos"))!;
        fechaInicio = fechaFinal = DateTime.Today;
    }

    public void IrEditar(int vehiculoId)
    {
        NavigationManager.NavigateTo($"/Edit/Id={vehiculoId}");
    }

    public void IrEliminar(int vehiculoId)
    {
        NavigationManager.NavigateTo($"/Delete/Id={vehiculoId}");
    }

    public void IrDetalle(int vehiculoId)
    {
        NavigationManager.NavigateTo($"Details/Id={vehiculoId}");
    }

    public async Task Filtrar()
    {
        switch (OpcionFiltro)
        {
            case 1:
                listaVehiculos = (await httpClient.GetFromJsonAsync<List<Vehiculos>>($"api/Vehiculos"))!.Where(v => v.VehiculoId == vehiculo.VehiculoId).ToList();
                break;
            case 2:
                listaVehiculos = (await httpClient.GetFromJsonAsync<List<Vehiculos>>("api/Vehiculos"))!.Where(v => v.Fecha! >= fechaInicio && v.Fecha <= fechaFinal).ToList();
                break;
            case 3:
                listaVehiculos = (await httpClient.GetFromJsonAsync<List<Vehiculos>>("api/Vehiculos"))!.Where(v => v.Descripcion!.ToLower().Contains(vehiculo.Descripcion!.ToLower())).ToList();
                break;
        }
    }

    public async Task ReiniciarFiltro()
    {
        listaVehiculos = (await httpClient.GetFromJsonAsync<List<Vehiculos>>("api/Vehiculos"))!;
    }
}